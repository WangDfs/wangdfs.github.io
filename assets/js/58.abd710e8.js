(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{371:function(t,i,l){"use strict";l.r(i);var r=l(4),e=Object(r.a)({},(function(){var t=this,i=t._self._c;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h4",{attrs:{id:"java"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#java"}},[t._v("#")]),t._v(" java")]),t._v(" "),i("div",{staticClass:"custom-block tip"},[i("p",{staticClass:"custom-block-title"},[t._v("包装类型")])]),t._v(" "),i("ul",[i("li",[t._v("包装类型是对象类型， 可以在泛型中应用")]),t._v(" "),i("li",[t._v("Interger i = 10,  会自动装箱，然后int x = i 会自动拆箱")]),t._v(" "),i("li",[t._v("包装类型有缓存， 比如Integer i = 10  integer j = 10; i和j是一样的，底层-128-127已经缓存起来了，不会去new")]),t._v(" "),i("li",[t._v("Interger.valueOf(),  Interger.intValue;")])]),t._v(" "),i("div",{staticClass:"custom-block tip"},[i("p",{staticClass:"custom-block-title"},[t._v("string")])]),t._v(" "),i("ul",[i("li",[t._v("StringBuffer和StringBuilder都可以用来拼接字符串，对字符串进行操作")]),t._v(" "),i("li",[t._v("StringBuffer是线程安全的，StringBuilder是线程不安全的")]),t._v(" "),i("li",[t._v("jdk8之前，一个循环多次 字符串相加操作，会创建多个StringBuider对象，性能会变差")]),t._v(" "),i("li",[t._v("String类被final修饰不可被继承")]),t._v(" "),i("li",[t._v("String中用char数组保存字符串，并且是私有final的，字符串不可变 （jdk9变成了byte数组保存字符串）")]),t._v(" "),i("li",[t._v("String重写了equals方法，比较的是字符串的地址")]),t._v(" "),i("li",[t._v("为了避免字符串被重复创建，有了字符串常量池")]),t._v(" "),i("li",[t._v('String s1 = new String("abc"), 会创建1个或两个对象。')])])])}),[],!1,null,null,null);i.default=e.exports}}]);