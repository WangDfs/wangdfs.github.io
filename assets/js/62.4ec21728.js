(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{374:function(t,s,a){"use strict";a.r(s);var n=a(4),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h4",{attrs:{id:"map"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map"}},[t._v("#")]),t._v(" Map")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("HashMap和Hashtable的区别")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("HashMap")]),t._v("线程不安全， "),s("code",[t._v("Hashtable")]),t._v("线程安全， "),s("code",[t._v("Hashtable")]),t._v("内部的方法基本都经过syncrinized修饰")]),t._v(" "),s("li",[s("code",[t._v("HashMap")]),t._v(" 比"),s("code",[t._v("Hashtable")]),t._v("效率高一点， "),s("code",[t._v("Hashtable")]),t._v("基本被淘汰了")]),t._v(" "),s("li",[s("code",[t._v("HashMap")]),t._v("可以存储null的key和value")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("HashMap和HashSet的区别")])]),t._v(" "),s("p",[s("code",[t._v("HashSet")]),t._v("底层是基于"),s("code",[t._v("HashMap")]),t._v("实现的")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("HashMap和TreeMap的区别")])]),t._v(" "),s("p",[s("code",[t._v("TreeMap")]),t._v("和"),s("code",[t._v("HashMap")]),t._v("都继承自"),s("code",[t._v("AbstractMap")]),t._v("， "),s("code",[t._v("TreeMap")]),t._v("实现了"),s("code",[t._v("NavigableMap")]),t._v("和"),s("code",[t._v("SortedMap")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("HashSet如何检查重复")])]),t._v(" "),s("p",[t._v("把一个对象加入HashSet中时，HashSet会先计算对象的hashcode值来判断对象加入的位置，如果没有相符的hashcode，说明这个对象没有出现过，如果发现相同的hashcode，会使用equals（）方法来检查hashcode相等的对象是否真的相同，如果相同不会插入成功")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("HashMap的底层实现")])]),t._v(" "),s("p",[t._v("下一个幂的大小， 最接近这个数的 pow(2,i);")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://blogwang.oss-cn-hangzhou.aliyuncs.com/202306081604911.png",alt:"image-20230608153903713"}})]),t._v(" "),s("p",[t._v("Node为普通节点，  TreeNode为红黑树节点")]),t._v(" "),s("p",[t._v("threshould表示当前最大容量")]),t._v(" "),s("p",[t._v("判断当前节点是否真的重复，并且判断是否为红黑树节点，如果没有找到重复的说明当前节点不存在。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://blogwang.oss-cn-hangzhou.aliyuncs.com/202306081604717.png",alt:"image-20230608152946402"}})]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("为什么是2的幂次方")])]),t._v(" "),s("p",[t._v("为了存取高效，尽量减少碰撞， 数组下标的计算方法是当前数组的长度  (n-1) & hash 来计算的，所以长度要为2的幂次方。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("HashMap多线程导致死循环")])]),t._v(" "),s("p",[t._v("jdk1.7采用的是头插法， 或导致形成环，从而导致死循环")]),t._v(" "),s("p",[t._v("jdk1.8采用的是尾插法，不会死循环，但是也会造成数据覆盖")]),t._v(" "),s("p",[t._v("并发环境下可以使用"),s("code",[t._v("ConcurrentHashMap")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("为什么线程不安全")])]),t._v(" "),s("ul",[s("li",[t._v("两个线程同时进行put操作， 而且发生了冲突，一个线程判断完了冲突，第二个已经插入了数据， 这样就会导致覆盖")]),t._v(" "),s("li",[t._v("两个线程同时put导致size不正确")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("HashMap遍历")])]),t._v(" "),s("ul",[s("li",[t._v("迭代器遍历\n"),s("ul",[s("li",[t._v("EntrySet遍历")]),t._v(" "),s("li",[t._v("KeySet遍历")])])]),t._v(" "),s("li",[t._v("For Each遍历\n"),s("ul",[s("li",[t._v("EntrySet")]),t._v(" "),s("li",[t._v("KeySet")])])]),t._v(" "),s("li",[t._v("Lambda表达式遍历")]),t._v(" "),s("li",[t._v("Streams API遍历\n"),s("ul",[s("li",[t._v("单线程")]),t._v(" "),s("li",[t._v("多线程")])])])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" map "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashMap")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"JAVA"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"JDK"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1.1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        Iterator<Map.Entry<Integer, String>> iterator = map.entrySet().iterator();")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        while(iterator.hasNext()){")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//            Map.Entry<Integer,String> entry = iterator.next();")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//            System.out.println(entry.getKey());")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//            System.out.println(entry.getValue());")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        }")]),t._v("\n\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1.2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        Iterator<Integer> iterator1 = map.keySet().iterator();")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        while(iterator1.hasNext()){")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//            Integer key = iterator1.next();")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//            System.out.println(key);")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//            System.out.println(map.get(key));")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        }")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2.1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        for(Map.Entry<Integer, String> entry : map.entrySet()){")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//            System.out.println(entry.getKey());")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//            System.out.println(entry.getValue());")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        }")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        map.forEach((key,value)->{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//            System.out.println(key);")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//            System.out.println(value);")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        });")]),t._v("\n\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//4.1")]),t._v("\n        map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("entrySet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("stream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("entry"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("entry"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getKey")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("entry"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n        \n        map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("entrySet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parallelStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("entry"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("entry"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getKey")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("entry"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br"),s("span",{staticClass:"line-number"},[t._v("39")]),s("br"),s("span",{staticClass:"line-number"},[t._v("40")]),s("br"),s("span",{staticClass:"line-number"},[t._v("41")]),s("br"),s("span",{staticClass:"line-number"},[t._v("42")]),s("br"),s("span",{staticClass:"line-number"},[t._v("43")]),s("br"),s("span",{staticClass:"line-number"},[t._v("44")]),s("br"),s("span",{staticClass:"line-number"},[t._v("45")]),s("br")])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("ConcurrentHashMap")])]),t._v(" "),s("p",[s("code",[t._v("ConcurrentHashMap")]),t._v(" 每一个Node节点或者TreeNode节点会分配一把锁")]),t._v(" "),s("p",[t._v("只要哈希不冲突就不会影响其他的操作")])])}),[],!1,null,null,null);s.default=e.exports}}]);